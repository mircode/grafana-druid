{"version":3,"sources":["../src/query_ctrl.js"],"names":["angular","_","QueryPart","QueryModel","QueryBuilder","QueryCtrl","SQLQueryCtrl","$scope","$injector","templateSrv","$q","uiSegmentSrv","q","target","queryModel","panel","scopedVars","queryBuilder","datasource","database","initChart","initTable","initWhere","initSelect","initGroup","resultFormats","text","value","table","newSegment","newSelectMeasurement","getTables","panelCtrl","refresh","categories","getCategories","selectMenu","reduce","memo","cat","key","menu","submenu","map","item","type","push","selectParts","part","evt","name","removeSelectPart","when","subitem","addSelectPart","groupBySegment","newPlusButton","index","tagsQuery","buildExploreQuery","metricFindQuery","then","transformToSegments","catch","handleQueryError","bind","removeGroupByPart","query","options","hasFill","hasGroupByTime","tags","tag","addGroupBy","plusButton","html","removeTagFilterSegment","fake","where","operator","test","condition","newCondition","newKey","newOperator","newKeyValue","count","length","last","Math","max","segment","nextValue","newOperators","addTemplateVars","results","splice","copy","newFake","cssClass","rebuildTargetTagConditions","tagIndex","tagOperator","each","segment2","getTagValueOperator","tagValue","render","err","console","log","rawQuery","error","message","segments","expandable","variables","variable","unshift","fieldsQuery","templateUrl"],"mappings":"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","file":"query_ctrl.js","sourcesContent":["import angular from 'angular';\nimport _ from 'lodash';\n\nimport QueryPart    from './query_part';\nimport QueryModel   from './query_model';\nimport QueryBuilder from './query_builder';\nimport {QueryCtrl}  from 'app/plugins/sdk';\n\n\n// 查询Controller\nexport class SQLQueryCtrl extends QueryCtrl {\n\t\n  \n  // 构造函数\n  constructor($scope,$injector,templateSrv,$q,uiSegmentSrv) {\n    super($scope, $injector);\n\n\t// 保存基本信息\n\tthis.q = $q;\n    this.target = this.target;\n    this.templateSrv = templateSrv;\n    this.uiSegmentSrv = uiSegmentSrv;\n    \n    \n    // 查询Model\n    this.queryModel = new QueryModel(this.target, templateSrv, this.panel.scopedVars);\n    // 查询对象\n    this.queryBuilder = new QueryBuilder(this.target, this.datasource.database);\n    \n    // 初始化Chart\n    initChart();\n    \n    // 初始化Table\n    initTable();\n    // 初始化Where\n    initWhere();\n    // 初始化Select\n    this.initSelect();\n    // 初始化Group\n    this.initGroup();\n    \n    \n  }\n  //=================\n  // initChart相关函数\n  //=================\n  initChart(){\n  \t// 时序图和表格\n    this.resultFormats = [{text: 'Time series', value: 'time_series'},{text: 'Table', value: 'table'}];\n  }\n  //=================\n  // table相关函数\n  //=================\n  initTable(){\n  \tthis.table = this.target.table ? this.uiSegmentSrv.newSegment(this.target.table) : this.uiSegmentSrv.newSelectMeasurement();\n  }\n  getTables() {\n    return this.queryBuilder.getTables();\n  }\n  tableChanged() {\n    this.target.table = this.table.value;\n    this.panelCtrl.refresh();\n  }\n  \n \n  //=================\n  // select相关函数\n  //=================\n  initSelect(){\n  \tvar categories = QueryPart.getCategories();\n    this.selectMenu = _.reduce(categories, function(memo, cat, key) {\n      var menu = {\n        text: key,\n        submenu: cat.map(item => {\n         return {text: item.type, value: item.type};\n        }),\n      };\n      memo.push(menu);\n      return memo;\n    }, []);\n  }\n  // 更改删除Select Part\n  handleSelectPartEvent(selectParts, part, evt) {\n    switch (evt.name) {\n      // 点击字段\n      case \"get-param-options\": {\n        //var fieldsQuery = this.queryBuilder.buildExploreQuery('FIELDS');\n        //return this.datasource.metricFindQuery(fieldsQuery)\n        //.then(this.transformToSegments(true))\n        //.catch(this.handleQueryError.bind(this));\n        return 'pt_service';\n      }\n      // 字段值发生改变\n      case \"part-param-changed\": {\n        this.panelCtrl.refresh();\n        break;\n      }\n      // 点击删除图标\n      case \"action\": {\n        this.queryModel.removeSelectPart(selectParts, part);\n        this.panelCtrl.refresh();\n        break;\n      }\n      // 删除图标\n      case \"get-part-actions\": {\n        return this.$q.when([{text: 'Remove', value: 'remove-part'}]);\n      }\n    }\n  }\n  // 添加Select Part\n  addSelectPart(selectParts, cat, subitem) {\n    this.queryModel.addSelectPart(selectParts, subitem.value);\n    this.panelCtrl.refresh();\n  }\n \n  //=================\n  // group相关函数\n  //=================\n  initGroup(){\n    this.groupBySegment = this.uiSegmentSrv.newPlusButton();\n  }\n  handleGroupByPartEvent(part, index, evt) {\n    switch (evt.name) {\n      // 添加分组字段\n      case \"get-param-options\": {\n        var tagsQuery = this.queryBuilder.buildExploreQuery('TAG_KEYS');\n        return this.datasource.metricFindQuery(tagsQuery)\n        .then(this.transformToSegments(true))\n        .catch(this.handleQueryError.bind(this));\n      }\n      // 分组字段更新\n      case \"part-param-changed\": {\n        this.panelCtrl.refresh();\n        break;\n      }\n      // 删除分组字段\n      case \"action\": {\n        this.queryModel.removeGroupByPart(part, index);\n        this.panelCtrl.refresh();\n        break;\n      }\n      // 分组字段删除按钮\n      case \"get-part-actions\": {\n        return this.$q.when([{text: 'Remove', value: 'remove-part'}]);\n      }\n    }\n  }\n  // 分组信息\n  getGroupByOptions() {\n    var query = this.queryBuilder.buildExploreQuery('TAG_KEYS');\n\n    return this.datasource.metricFindQuery(query).then(tags => {\n      var options = [];\n      if (!this.queryModel.hasFill()) {\n        options.push(this.uiSegmentSrv.newSegment({value: 'fill(null)'}));\n      }\n      if (!this.queryModel.hasGroupByTime()) {\n        options.push(this.uiSegmentSrv.newSegment({value: 'time($interval)'}));\n      }\n      for (let tag of tags) {\n        options.push(this.uiSegmentSrv.newSegment({value: 'tag(' + tag.text + ')'}));\n      }\n      return options;\n    }).catch(this.handleQueryError.bind(this));\n  }\n  // 更新分组\n  groupByAction() {\n    this.queryModel.addGroupBy(this.groupBySegment.value);\n    var plusButton = this.uiSegmentSrv.newPlusButton();\n    this.groupBySegment.value  = plusButton.value;\n    this.groupBySegment.html  = plusButton.html;\n    this.panelCtrl.refresh();\n  }\n\n  \n  //=================\n  // where相关函数\n  //=================\n  initWhere(){\n  \t\n  \t// 移除过滤条件\n    this.removeTagFilterSegment = uiSegmentSrv.newSegment({fake: true, value: '-- remove tag filter --'});\n    \n  \t// 查询条件\n    this.where = [];\n    \n    // 拼接现有查询条件\n    for (var tag in this.target.tags) {\n      if (!tag.operator) {\n      \t// 如果tag.value是增则表达式\n        if (/^\\/.*\\/$/.test(tag.value)) {\n          tag.operator = \"=~\";\n        } else {\n          tag.operator = '=';\n        }\n      }\n      // 查询条件 and|or\n      if (tag.condition) {\n        this.where.push(uiSegmentSrv.newCondition(tag.condition));\n      }\n      // 查询Key\n      this.where.push(uiSegmentSrv.newKey(tag.key));\n      // 查询操作符\n      this.where.push(uiSegmentSrv.newOperator(tag.operator));\n      // 查询Value\n      this.where.push(uiSegmentSrv.newKeyValue(tag.value));\n    }\n    \n    var count = this.where.length;\n    var last = this.where[Math.max(count-1, 0)];\n\n    if (!last || last.type !== 'plus-button') {\n      this.where.push(this.uiSegmentSrv.newPlusButton());\n    }\n  }\n  // Where查询条件\n  getConditions(segment, index) {\n  \t// 链接条件\n    if (segment.type === 'condition') {\n      return this.$q.when([this.uiSegmentSrv.newSegment('AND'), this.uiSegmentSrv.newSegment('OR')]);\n    }\n    // 操作符\n    if (segment.type === 'operator') {\n      var nextValue = this.where[index+1].value;\n      if (/^\\/.*\\/$/.test(nextValue)) {\n        return this.$q.when(this.uiSegmentSrv.newOperators(['=~', '!~']));\n      } else {\n        return this.$q.when(this.uiSegmentSrv.newOperators(['=', '!=', '<>', '<', '>']));\n      }\n    }\n\n    // 操作数和对应的值\n    var query, addTemplateVars;\n    if (segment.type === 'key' || segment.type === 'plus-button') {\n      query = this.queryBuilder.buildExploreQuery('TAG_KEYS');\n      addTemplateVars = false;\n    } else if (segment.type === 'value')  {\n      query = this.queryBuilder.buildExploreQuery('TAG_VALUES', this.where[index-2].value);\n      addTemplateVars = true;\n    }\n\n    return this.datasource.metricFindQuery(query)\n    .then(this.transformToSegments(addTemplateVars))\n    .then(results => {\n      if (segment.type === 'key') {\n        results.splice(0, 0, angular.copy(this.removeTagFilterSegment));\n      }\n      return results;\n    })\n    .catch(this.handleQueryError.bind(this));\n    \n  }\n  // 更新查询条件\n  conditionChanged(segment, index) {\n    this.where[index] = segment;\n\n    // 移除条件\n    if(segment.value === this.removeTagFilterSegment.value) {\n      // 移除操作数、操作符和对应的值\n      this.where.splice(index, 3);\n      \n      if (this.where.length === 0) {\n        this.where.push(this.uiSegmentSrv.newPlusButton());\n      } else if (this.where.length > 2) {\n      \t// 移除逻辑符and或者or\n        this.where.splice(Math.max(index-1, 0), 1);\n        if (this.where[this.where.length-1].type !== 'plus-button') {\n          this.where.push(this.uiSegmentSrv.newPlusButton());\n        }\n      }\n    } else {\n      if (segment.type === 'plus-button') {\n      \t// 插入and逻辑符\n        if (index > 2) {\n          this.where.splice(index, 0, this.uiSegmentSrv.newCondition('AND'));\n        }\n        // 添加操作符\n        this.where.push(this.uiSegmentSrv.newOperator('='));\n        // 添加value\n        this.where.push(this.uiSegmentSrv.newFake('select tag value', 'value', 'query-segment-value'));\n        \n        // 修改添加操作为key\n        segment.type = 'key';\n        segment.cssClass = 'query-segment-key';\n      }\n      // 补全添加按钮\n      if ((index+1) === this.where.length) {\n        this.where.push(this.uiSegmentSrv.newPlusButton());\n      }\n    }\n\t// 重新构建查询条件\n    this.rebuildTargetTagConditions();\n  }\n  rebuildTargetTagConditions() {\n    var tags = [];\n    var tagIndex = 0;\n    var tagOperator = \"\";\n\n\t// 遍历where,构造tags\n    _.each(this.where, (segment2, index) => {\n      if (segment2.type === 'key') {\n        if (tags.length === 0) {\n          tags.push({});\n        }\n        tags[tagIndex].key = segment2.value;\n      } else if (segment2.type === 'value') {\n        tagOperator = this.getTagValueOperator(segment2.value, tags[tagIndex].operator);\n        if (tagOperator) {\n          this.where[index-1] = this.uiSegmentSrv.newOperator(tagOperator);\n          tags[tagIndex].operator = tagOperator;\n        }\n        tags[tagIndex].value = segment2.value;\n      } else if (segment2.type === 'condition') {\n        tags.push({ condition: segment2.value });\n        tagIndex += 1;\n      } else if (segment2.type === 'operator') {\n        tags[tagIndex].operator = segment2.value;\n      }\n    });\n\t\n    this.target.tags = tags;\n    this.panelCtrl.refresh();\n  }\n  getTagValueOperator(tagValue, tagOperator) {\n    if (tagOperator !== '=~' && tagOperator !== '!~' && /^\\/.*\\/$/.test(tagValue)) {\n      return '=~';\n    } else if ((tagOperator === '=~' || tagOperator === '!~') && /^(?!\\/.*\\/$)/.test(tagValue)) {\n      return '=';\n    }\n  }\n\n\n  \n\n  \n\n  \n\n  // 切换编辑模式\n  toggleEditorMode() {\n    try {\n      this.target.query = this.queryModel.render(false);\n    } catch (err) {\n      console.log('query render error');\n    }\n    this.target.rawQuery = !this.target.rawQuery;\n  }\n \n  // 错误处理\n  handleQueryError(err) {\n    this.error = err.message || 'Failed to issue metric query';\n    return [];\n  }\n\n  // 格式转换\n  transformToSegments(addTemplateVars) {\n    return (results) => {\n      var segments = _.map(results, segment => {\n        return this.uiSegmentSrv.newSegment({ value: segment.text, expandable: segment.expandable });\n      });\n\n      if (addTemplateVars) {\n        for (let variable of this.templateSrv.variables) {\n          segments.unshift(this.uiSegmentSrv.newSegment({ type: 'template', value: '/^$' + variable.name + '$/', expandable: true }));\n        }\n      }\n\n      return segments;\n    };\n  }\n\n\n  getFieldSegments() {\n    var fieldsQuery = this.queryBuilder.buildExploreQuery('FIELDS');\n    return this.datasource.metricFindQuery(fieldsQuery)\n    .then(this.transformToSegments(false))\n    .catch(this.handleQueryError);\n  }\n  getCollapsedText() {\n    return this.queryModel.render(false);\n  }\n}\n\n// 模板对象\nSQLQueryCtrl.templateUrl = 'partials/query.editor.html';"]}
{"version":3,"sources":["../src/query_builder.js"],"names":["_","QueryBuilder","target","database","url","param","cache","self","method","request","cachekey","hashCode","JSON","stringify","sessionStorage","getItem","Promise","resolve","reject","parse","then","data","setItem","str","hash","length","i","ch","charCodeAt","sql","map","isObject","table","mapKeys","value","key","text","column","type","indexOf","res","undefined","sqls","split","promis","push","q","all","index","isArray","x","row","y","legend","year","month","day","replace","match","yr","m","d","datapoints","time","Date","getTime"],"mappings":"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","file":"query_builder.js","sourcesContent":["import _ from 'lodash';\n\n\n// 用于发起后台请求\nexport default class QueryBuilder {\n\n\t// 构造函数\n\tconstructor(target, database) {\n\t\tthis.target = target;\n\t\tthis.database = database;\n\t\tthis.url=database.url;\n\t}\n\trequest(url,param,cache){\n\t\tvar self=this;\n\t\tvar cache=cache||true;\n\t\tvar method='POST';\n\t\tif(!cache) return self.database.request(url,param,method);\n\t\t\n\t\tvar cachekey=self.hashCode(url+JSON.stringify(param)+method);\n\t\tif(sessionStorage.getItem(cachekey)){\n\t\t\treturn new Promise(function(resolve,reject){\n\t\t\t\tresolve(JSON.parse(sessionStorage.getItem(cachekey)));\n\t\t\t});\n\t\t}else{\n\t\t\treturn self.database.request(url,param,method).then(function(data){\n\t\t\t\tsessionStorage.setItem(cachekey,JSON.stringify(data));\n\t\t\t\treturn data;\n\t\t\t});\n\t\t}\n\t}\n\thashCode(str){\n\t    var hash = 0;\n\t    if (str.length == 0) return hash;\n\t    for (var i = 0; i < str.length; i++) {\n\t        var ch = str.charCodeAt(i);\n\t        hash = ((hash<<5)-hash)+ch;\n\t        hash = hash & hash; // Convert to 32bit integer\n\t    }\n\t    return hash;\n\t}\n\t// 查询表格信息\n\tqueryTables() {\n\t\tvar self=this;\n\t\treturn self.request(this.url+'/db/query',{sql:'show tables'}).then(function(data){\n\t\t    return _.map(data.data, table=>{\n\t\t    \tif(_.isObject(table)){\n\t\t\t\t\treturn _.mapKeys(table,(value, key)=>{\n\t\t\t\t\t  return 'text';\n\t\t\t\t\t});\t\t\t    \t\n\t\t\t\t}else{\n\t\t\t\t\treturn {'text':table}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t}\n\t// 查询取列信息\n\tqueryColumns() {\n\t\tvar self=this;\n\t\treturn self.request(this.url+'/db/query',{sql:'desc '+this.target.table}).then(function(data){\n\t\t    return _.map(data.data, column=>{\n\t\t    \tvar text=column['Field'];\n\t\t    \tvar type=column['Type'];\n\t\t    \tif(type.indexOf('varchar')>-11||type.indexOf('string')>-1){\n\t\t    \t\ttype='string';\n\t\t    \t}\n\t\t    \treturn {text:text,type:type};\n\t\t    \t\n\t\t\t});\n\t\t});\n\t}\n\t// 获取某列的所有值\n\tqueryColumnValue(sql){\n\t\tvar self=this;\n\t\treturn self.request(this.url+'/db/query',{sql:sql}).then(function(data){\n\t\t    var res= _.map(data.data, column=>{\n\t\t    \tvar text=undefined;\n\t\t    \tvar value=undefined;\n\t\t    \tfor(var key in column){\n\t\t    \t\ttext=key;\n\t\t    \t\tvalue=column[key];\n\t\t    \t}\n\t\t    \treturn {text:value,value:value};\n\t\t\t});\n\t\t\treturn res;\n\t\t});\n\t}\n\t// 查询SQL\n\tquerySql(sql) {\n\t\tvar self=this;\n\t\tvar sqls=sql.split(';');\n\t\tvar promis=[];\n\t\tfor(var i in sqls){\n\t\t\tpromis.push(self.request(this.url+'/db/query',{sql:sqls[i]}));\n\t\t}\n\t\t\r\n\t\treturn self.database.q.all(promis).then(function(data){\r\n\t\t    var index={};\n\t\t    if(_.isArray(data)){\n\t\t    \tfor(var i in data){\r\n\t\t    \t\t_.map(data[i].data,row=>{\r\n\t\t    \t\t\t\tvar x=row.x;\r\n\t\t    \t\t\t\tvar y=row.y;\r\n\t\t    \t\t\t\tvar legend=row.legend;\r\n\t\t    \t\t\t\t\r\n\t\t    \t\t\t\tvar year=undefined;\r\n\t\t    \t\t\t\tvar month=undefined;\r\n\t\t    \t\t\t\tvar day=undefined;\r\n\t\t    \t\t\t\tx.replace(/(\\d{1,4})(\\d{1,2})(\\d{1,2})/ig,function(match,yr,m,d){\r\n\t\t    \t\t\t\t\tyear=yr;\r\n\t\t    \t\t\t\t\tmonth=m;\r\n\t\t    \t\t\t\t\tday=d;\r\n\t\t    \t\t\t\t});\r\n\t\t    \t\t\t\tif(!index[legend]){\r\n\t\t    \t\t\t\t\tindex[legend]={target:legend,datapoints:[]};\r\n\t\t    \t\t\t\t}\r\n\t\t    \t\t\t\tvar time=(new Date(year,month-1,day)).getTime();\r\n\t\t    \t\t\t\tindex[legend].datapoints.push([y,time]);\r\n\t\t    \t\t});\n\t    \t\t}\n    \t\t}\r\n    \t\tvar res=[];\r\n    \t\tfor(var key in index){\r\n    \t\t\tres.push(index[key]);\r\n    \t\t}\r\n    \t\treturn {data:res};\r\n\t\t});\n\t}\n\n}"]}